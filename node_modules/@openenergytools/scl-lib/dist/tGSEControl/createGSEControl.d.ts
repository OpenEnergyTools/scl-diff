import { Insert } from "../foundation/utils.js";
export type CreateGSEControlOptions = {
    gseControl?: {
        /** `GSEControl` name. Must be unique.
         * When missing a unique name starting with `newGSEControl_xx` is set */
        name?: string;
        desc?: string | null;
        /** Id for the new GSEControl. Default is IED.name/LDevice.inst/LLN0/GSEControl.name */
        appID?: string;
        /** Whether the GSEControl is of type 'GOOSE' or 'GSSE'. Default 'GOOSE' */
        type?: "GOOSE" | "GSSE";
        /** Whether GOOSE is coded with fixed offsets. Default is false */
        fixedOffs?: "true" | "false";
        /** Security option for the GSEControl acc IEC 62132. Defaults to null */
        securityEnable?: "SignatureAndEncryption" | "Signature" | "None" | null;
        /** Reference to an existing `DataSet` */
        datSet?: string | null;
        /**User-defined configuration revision (confRev). Overwrites
         *logic to to set confRev acc. to IEC 61850.*/
        confRev?: string | null;
    };
    gse?: {
        /** The AccessPoint that shall publish the GOOSE. Default the AccessPoint holding the Server element */
        apName?: string;
        /** MAC-Address within `P` element in the `GSE` element */
        mac?: string;
        /** APPID within `P` element in the `GSE` element */
        appId?: string;
        /** VLAN-ID within `P` element in the `GSE` element */
        vlanId?: string;
        /** VLAN-PRIORITY within `P` element in the `GSE` element */
        vlanPriority?: string;
        /** MaxTime element within `GSE` element */
        MaxTime?: string;
        /** MinTime element within `GSE` element */
        MinTime?: string;
    };
    /** If true, skips check for unique GSEControl name,
     * whether `datSet` is pointing to valid `DataSet`
     * and whether additional GSEControl is allowed in IED/AccessPoint. */
    skipCheck?: boolean;
};
/** Utility function to create schema valid `GSEControl` and `GSE` elements
 * @parent Parent element such as `LN0`, `LDevice`, `AccessPoint` and `IED`
 * @options Configuration for GSEControl/GSE element
 * @returns Edit inserting new `GSEControl` to [[`parent`]] element and when possible
 *          `GSE` to connected `ConnectedAP`
 * */
export declare function createGSEControl(parent: Element, options?: CreateGSEControlOptions): Insert[];
