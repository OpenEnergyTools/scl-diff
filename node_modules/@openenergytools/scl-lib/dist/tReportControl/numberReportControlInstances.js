function maxRptEnabled(reportControl) {
    return parseInt(reportControl.querySelector(":scope > RptEnabled")?.getAttribute("max") ??
        "1", 10);
}
function sumReportControlInstances(root, buffered = true) {
    const selector = buffered
        ? `ReportControl[buffered="true"]`
        : `ReportControl:not([buffered]), ReportControl[buffered="false"]`;
    return Array.from(root.querySelectorAll(selector))
        .map((reportControl) => maxRptEnabled(reportControl))
        .reduce((a, b) => a + b, 0);
}
/** @return Number of `ReportControl` elements within [[`root`]] */
export function numberReportControlInstances(root) {
    const bufInstances = sumReportControlInstances(root, true);
    const unBufInstances = sumReportControlInstances(root, false);
    return { bufInstances, unBufInstances };
}
//# sourceMappingURL=numberReportControlInstances.js.map