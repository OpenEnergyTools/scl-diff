import { createElement } from "../foundation/utils.js";
import { macAddressGenerator } from "../generator/macAddressGenerator.js";
import { appIdGenerator } from "../generator/appIdGenerator.js";
import { getReference } from "../tBaseElement/getReference.js";
/** @returns Edit inserting new `SMV` to [[`parent`]] ConnectedAP element */
export function createSMV(parent, attributes, options = {}) {
    if (parent.tagName !== "ConnectedAP")
        return null;
    const doc = parent.ownerDocument;
    const gSE = createElement(doc, "SMV", attributes);
    const address = createElement(doc, "Address", {});
    gSE.appendChild(address);
    const pTypes = {};
    pTypes["MAC-Address"] = options.mac ?? macAddressGenerator(doc, "SMV")();
    pTypes.APPID = options.appId ?? appIdGenerator(doc, "SMV")();
    pTypes["VLAN-ID"] = options.vlanId ?? "000";
    pTypes["VLAN-PRIORITY"] = options.vlanPriority ?? "4";
    Object.entries(pTypes)
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        .filter(([_, value]) => value !== undefined)
        .forEach(([type, value]) => {
        const child = createElement(doc, "P", { type });
        child.textContent = value;
        address.appendChild(child);
    });
    return {
        parent,
        node: gSE,
        reference: getReference(parent, "SMV"),
    };
}
//# sourceMappingURL=createSMV.js.map